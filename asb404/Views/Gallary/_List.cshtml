@model IEnumerable<Asb404.Models.Gallary>
@using Asb404.Models
@using PagedList;
@using PagedList.Mvc;
@{
    DBContexter _db = new DBContexter();
}

<link href="~/Content/animate.min.css" rel="stylesheet" />
<link href="~/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Content/prettyPhoto.css" rel="stylesheet">
<link href="~/Content/font-awesome.min.css" rel="stylesheet">
<link href="~/Content/animate.css" rel="stylesheet">
<link href="~/Content/main.css" rel="stylesheet">
<link href="~/Content/responsive.css" rel="stylesheet">
<link href="~/Content/FontFarsi.css" rel="stylesheet" />


<div class="portfolio-items">
    @foreach (var item in Model)
    {
        string cs = "", Website = "";
        var mm = _db.Project.Find(item.idx);
        if (mm != null)
        {
            cs = _db.Project.Find(item.idx).Customer;
            Website = _db.Project.Find(item.idx).Website;
        }

        <div class="col-sm-3 col-xs-12 portfolio-item html">
            <div class="view efffect">

                <div class="portfolio-image">
                    <img src="@item.image" alt="" style="height:200px;width:300px;">

                </div>
                <div class="mask text-center">
                    <h3>@cs</h3>
                    <h4>@item.Discription.ToString()</h4>
                    @if (item.Date != null && String.IsNullOrEmpty(item.Date) == false)
                    {
                        <h4>@item.Date.ToString()</h4>
                    }
                    <a href="@Website"><i class="fa fa-link"></i></a>
                    <a href="@item.image" data-gallery="prettyPhoto"><i class="fa fa-search-plus"></i></a>
                    @if (Request.IsAuthenticated)
                    {
                        <a href="~/project/DeleteGallary/@item.id"><i class="fa fa-minus"></i></a>
                    }
                </div>
            </div>
        </div>
    }

</div>


<br />
<div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("_List", new
{
   page,
   LiElementClasses = new List<string>
{ "portfolio-image", "portfolio-item" },
   //The following properties are the same as OnlyShowFivePagesAtATime
   DisplayLinkToFirstPage = PagedListDisplayMode.Always,
   DisplayLinkToLastPage = PagedListDisplayMode.Always,
   DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
   DisplayLinkToNextPage = PagedListDisplayMode.Always,
   MaximumPageNumbersToDisplay = 5
,
        @Productid = 2,
        Text = ViewBag.text
    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "get", UpdateTargetId = "targetpanel", InsertionMode = InsertionMode.Replace, LoadingElementId = "div_loading" }))
</div>
